@using SilentNotes.ViewModels
@model RecycleBinViewModel
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <base href="@Model.HtmlBase">
    <title>SilentNotes</title>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no, user-scalable=no">

    <link href="bootstrap.min.css" rel="stylesheet" />
    <link href="silentnotes.css" rel="stylesheet" />
    <link href="@(Model.Theme.DarkMode ? "silentnotes.dark.css" : "silentnotes.light.css")" rel="stylesheet" />

    <script src="jquery-3.4.1.min.js"></script>
    <script src="bootstrap.bundle.min.js"></script>
    <script src="silentnotes.js"></script>

    <style type="text/css">
body::after {
    position: absolute;
    content: "";
    @(Model.Theme.CssBackgroundColor)
    @(Model.Theme.CssBackgroundImage)
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    z-index: -1;
    -webkit-filter: grayscale(0.8);
    filter: grayscale(0.8);
}

.wraplist-item {
    position: relative;
}
.note-card {
    max-height: 220px;
}
.restore {
    position: absolute;
    width: 72px;
    height: 72px;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    margin: auto;
    cursor: pointer;
}
.restore svg {
    width: 100%;
    height: 100%;
}
.note-viewer a {
    pointer-events: none; /* ignore clicks on links */
    cursor: default;
}
.locked svg {
    fill: rgba(160, 160, 160, 0.4);
}
.locked.dark svg {
    fill: rgba(204, 204, 204, 0.4);
}

.note-viewer.over-view.checklist p::before { content: @{WriteLiteral(Model.Icon.LoadIconAsCssUrl("checkbox-blank-outline", new[] { new KeyValuePair<string, string>("fill", "#000000") }));}; }
.note-viewer.dark.over-view.checklist p::before { content: @{WriteLiteral(Model.Icon.LoadIconAsCssUrl("checkbox-blank-outline", new[] { new KeyValuePair<string, string>("fill", "#FFFFFF") }));}; }
.note-viewer.over-view.checklist p.done::before { content: @{WriteLiteral(Model.Icon.LoadIconAsCssUrl("check-box-outline", new[] { new KeyValuePair<string, string>("fill", "#000000") }));}; }
.note-viewer.dark.over-view.checklist p.done::before { content: @{WriteLiteral(Model.Icon.LoadIconAsCssUrl("check-box-outline", new[] { new KeyValuePair<string, string>("fill", "#FFFFFF") }));}; }
.note-viewer.over-view.checklist p.disabled::before { content: @{WriteLiteral(Model.Icon.LoadIconAsCssUrl("checkbox-blank-outline", new[] { new KeyValuePair<string, string>("fill", "#000000") }));}; }
.note-viewer.dark.over-view.checklist p.disabled::before { content: @{WriteLiteral(Model.Icon.LoadIconAsCssUrl("checkbox-blank-outline", new[] { new KeyValuePair<string, string>("fill", "#FFFFFF") }));}; }
    </style>
    <script>
        $(function () {
            addShortcuts();
        });
    </script>
</head>
<body>
    <nav id="navigation" class="d-flex">
        <button class="nav-item mr-auto shortcut-escape" onclick="bind(event);" data-binding="GoBack" title="@Model.Language["back"]">@{WriteLiteral(Model.Icon["arrow-left"]);}</button>
        <button class="nav-item" onclick="bind(event)" data-binding="EmptyRecycleBin" title="@Model.Language["empty_recyclebin"]">@{WriteLiteral(Model.Icon["delete-forever"]);}</button>
    </nav>

    <div id="content" class="p-2">
        <ul id="recycled-notes"></ul>
    </div>

    <div hidden>
        @{WriteLiteral(Model.Icon.LoadIcon("lock-outline", new[] { new KeyValuePair<string, string>("id", "svg-lock-outline") }));}
    </div>
</body>
</html>
